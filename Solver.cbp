<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="Solver" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/IterativeSolver" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/IterativeSolver" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-fexceptions" />
		</Compiler>
		<Unit filename="AugmentedMatrix.cpp" />
		<Unit filename="AugmentedMatrix.h" />
		<Unit filename="Bisection.cpp" />
		<Unit filename="Bisection.h" />
		<Unit filename="Equation.cpp" />
		<Unit filename="Equation.h" />
		<Unit filename="GaussSiedel.cpp" />
		<Unit filename="GaussSiedel.h" />
		<Unit filename="GaussianElimination.cpp" />
		<Unit filename="GaussianElimination.h" />
		<Unit filename="Jacobi.cpp" />
		<Unit filename="Jacobi.h" />
		<Unit filename="LUDecomposition.cpp" />
		<Unit filename="LUDecomposition.h" />
		<Unit filename="Newton.cpp" />
		<Unit filename="Newton.h" />
		<Unit filename="Regula.cpp" />
		<Unit filename="Regula.h" />
		<Unit filename="SuccessiveOverRelaxation.cpp" />
		<Unit filename="SuccessiveOverRelaxation.h" />
		<Unit filename="Term.cpp" />
		<Unit filename="Term.h" />
		<Unit filename="main.cpp" />
		<Extensions>
			<code_completion />
			<debugger />
			<envvars />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
